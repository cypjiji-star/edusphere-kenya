
import fs from "fs";
import path from "path";

const keyFileName = "serviceAccountKey.json";
const keyFilePath = path.join(process.cwd(), keyFileName);

if (!fs.existsSync(keyFilePath)) {
    console.error(`\x1b[31mError: '${keyFileName}' not found in the root directory.\x1b[0m`);
    console.log(`\nPlease download your service account key from the Firebase console:`);
    console.log(`Project Settings > Service accounts > Generate new private key.`);
    console.log(`Then, save it as '${keyFileName}' in the root of this project and run the script again.`);
    process.exit(1);
}

try {
    // Read your original key file (the JSON you downloaded from Firebase)
    const serviceAccount = JSON.parse(
      fs.readFileSync(keyFilePath, "utf-8")
    );
    
    // Ensure required fields exist
    if (!serviceAccount.project_id || !serviceAccount.client_email || !serviceAccount.private_key) {
        throw new Error("The service account key file is missing required properties (project_id, client_email, private_key).");
    }

    // Convert the private key to a single line with \n
    const safePrivateKey = serviceAccount.private_key.replace(/\n/g, "\\n");

    const envContent = `
# -----------------------------------------------------------------------------
# FIREBASE SERVICE ACCOUNT (For Server-Side Admin SDK)
# -----------------------------------------------------------------------------
# This content was auto-generated by 'convert-key.js'.
# Copy these lines into your .env file.
#
# IMPORTANT: The FIREBASE_PRIVATE_KEY must be a single line, enclosed in quotes,
# with all newline characters from the original key replaced with "\\n".

FIREBASE_PROJECT_ID="${serviceAccount.project_id}"
FIREBASE_CLIENT_EMAIL="${serviceAccount.client_email}"
FIREBASE_PRIVATE_KEY="${safePrivateKey}"
`;

    console.log('\x1b[32m%s\x1b[0m', 'Successfully generated .env content:');
    console.log(envContent);
    console.log('\x1b[33m%s\x1b[0m', 'Please copy the lines above and paste them into your .env file.');

} catch (error: any) {
    console.error(`\x1b[31mError processing '${keyFileName}':\x1b[0m`);
    console.error(error.message);
    process.exit(1);
}
