
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function isDeveloper() {
      return request.auth != null && get(/databases/$(database)/documents/roles/$(request.auth.uid)).data.role == 'developer';
    }

    // Allow developer creation only if the roles collection has no developer yet.
    match /roles/{userId} {
      allow read: if isDeveloper();
      allow write: if request.auth != null && request.auth.uid == userId;
      // Allow first developer creation
      allow create: if !exists(/databases/$(database)/documents/roles/$(request.auth.uid)) && 
                      (get(/databases/$(database)/documents/roles/$(request.auth.uid)).data == null) &&
                      (size(query.get()/databases/$(database)/documents/roles.where("role", "==", "developer")) == 0);
    }
    
    // Developer Portal Access
    match /developers/{devId} {
      allow read, write: if isDeveloper();
    }
    match /platformSettings/{docId} {
      allow read, write: if isDeveloper();
    }
     match /platform_audit_logs/{logId} {
      allow read, write: if isDeveloper();
    }
     match /schools/{schoolId} {
        allow read, write: if isDeveloper();
     }


    // School Data Access Rules
    match /schools/{schoolId}/{document=**} {
       function isSchoolAdmin() {
         return request.auth != null && get(/databases/$(database)/documents/schools/$(schoolId)/users/$(request.auth.uid)).data.role == 'Admin';
       }

       function isSchoolTeacher() {
         return request.auth != null && get(/databases/$(database)/documents/schools/$(schoolId)/users/$(request.auth.uid)).data.role == 'Teacher';
       }

       function isSchoolParent() {
         return request.auth != null && get(/databases/$(database)/documents/schools/$(schoolId)/users/$(request.auth.uid)).data.role == 'Parent';
       }
       
       // Allow all authenticated school users read access to the school profile
       match /schoolProfile/{profileId} {
          allow read: if isSchoolAdmin() || isSchoolTeacher() || isSchoolParent();
          allow write: if isSchoolAdmin();
       }

       // Allow admins to manage roles, classes, subjects, users etc.
       match /roles/{roleId} {
          allow read, write: if isSchoolAdmin();
       }
       match /users/{userId} {
          allow read, write: if isSchoolAdmin();
          // Allow users to read their own data
          allow read: if request.auth.uid == userId;
       }
        match /classes/{classId} {
          allow read, write: if isSchoolAdmin();
       }
        match /subjects/{subjectId} {
          allow read, write: if isSchoolAdmin();
       }
        match /class-assignments/{classId} {
           allow read, write: if isSchoolAdmin();
        }

       // Teachers can read their classes and students, and manage academic content
        match /students/{studentId} {
            allow read: if isSchoolTeacher() || (isSchoolParent() && request.auth.uid in resource.data.parentIds);
            allow write: if isSchoolAdmin();
        }
         match /lesson-plans/{planId} {
            allow read, write: if isSchoolAdmin() || isSchoolTeacher();
        }
         match /assignments/{assignmentId} {
            allow read, write: if isSchoolAdmin() || isSchoolTeacher();
        }
         match /assignments/{assignmentId}/submissions/{submissionId} {
            allow read, write: if isSchoolAdmin() || isSchoolTeacher();
        }

        // Parents can view announcements, events, and their children's specific data
        match /announcements/{announcementId} {
            allow read: if isSchoolParent() || isSchoolTeacher() || isSchoolAdmin();
            allow write: if isSchoolAdmin() || isSchoolTeacher();
        }
        match /calendar-events/{eventId} {
             allow read: if isSchoolParent() || isSchoolTeacher() || isSchoolAdmin();
             allow write: if isSchoolAdmin();
        }

       // Default deny
       allow read, write: if false;
    }
  }
}

    