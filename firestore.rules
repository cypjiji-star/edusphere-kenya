rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    function isDeveloper() {
      // Check if the user's UID exists in the developers collection.
      return exists(/databases/$(database)/documents/developers/$(request.auth.uid));
    }

    function isSchoolAdmin(schoolId) {
      // Check if the user is an admin for a specific school.
      return get(/databases/$(database)/documents/schools/$(schoolId)/users/$(request.auth.uid)).data.role == 'Admin';
    }
    
    function isSchoolTeacher(schoolId) {
       return get(/databases/$(database)/documents/schools/$(schoolId)/users/$(request.auth.uid)).data.role == 'Teacher';
    }

    function isSchoolParent(schoolId) {
       return get(/databases/$(database)/documents/schools/$(schoolId)/users/$(request.auth.uid)).data.role == 'Parent';
    }
    
    function isOwner(userId) {
        return request.auth.uid == userId;
    }

    // --- Platform-Level Rules ---
    match /developers/{developerId} {
        // Allow creating the first developer account only
        allow create: if !exists(/databases/$(database)/documents/developers/$(request.auth.uid));
        // Allow developers to read/update their own doc
        allow read, update: if isDeveloper() && isOwner(developerId);
    }
    
    match /platformRoles/{roleId} {
        allow read: if isDeveloper();
        allow write: if isDeveloper();
    }

    match /platformSettings/{settingId} {
        allow read, write: if isDeveloper();
    }
    
     match /platform_audit_logs/{logId} {
        allow read: if isDeveloper();
        allow create; // Allow any service to create logs
    }

    // --- School-Specific Rules ---
    match /schools/{schoolId} {
      allow read; // Allow reading of school list by any authenticated user for login purposes.
      allow write: if isDeveloper(); // Only developers can create/delete schools.

        match /users/{userId} {
            allow read: if isSchoolAdmin(schoolId) || isSchoolTeacher(schoolId) || (isSchoolParent(schoolId) && isOwner(userId));
            allow write: if isSchoolAdmin(schoolId);
            allow create: if isSchoolAdmin(schoolId);
        }

        match /students/{studentId} {
            allow read: if isSchoolAdmin(schoolId) || isSchoolTeacher(schoolId) || isSchoolParent(schoolId); // Parents can read their children's data, checked in rules below
            allow write: if isSchoolAdmin(schoolId) || isSchoolTeacher(schoolId);
        }

        match /classes/{classId} {
            allow read, write: if isSchoolAdmin(schoolId) || isSchoolTeacher(schoolId);
        }

        match /subjects/{subjectId} {
            allow read, write: if isSchoolAdmin(schoolId) || isSchoolTeacher(schoolId);
        }
        
        match /class-assignments/{assignmentId} {
            allow read, write: if isSchoolAdmin(schoolId) || isSchoolTeacher(schoolId);
        }

        match /assignments/{assignmentId} {
            allow read, write: if isSchoolAdmin(schoolId) || isSchoolTeacher(schoolId);
            match /submissions/{submissionId} {
                 allow read, write: if isSchoolAdmin(schoolId) || isSchoolTeacher(schoolId);
            }
        }
        
        match /grades/{gradeId} {
             allow read: if isSchoolAdmin(schoolId) || isSchoolTeacher(schoolId) || isSchoolParent(schoolId);
             allow write: if isSchoolAdmin(schoolId) || isSchoolTeacher(schoolId);
        }

        match /attendance/{attendanceId} {
            allow read, write: if isSchoolAdmin(schoolId) || isSchoolTeacher(schoolId);
        }

        match /announcements/{announcementId} {
            allow read: if isSchoolAdmin(schoolId) || isSchoolTeacher(schoolId) || isSchoolParent(schoolId);
            allow write: if isSchoolAdmin(schoolId) || isSchoolTeacher(schoolId);
        }
        
        match /calendar-events/{eventId} {
            allow read: if isSchoolAdmin(schoolId) || isSchoolTeacher(schoolId) || isSchoolParent(schoolId);
            allow write: if isSchoolAdmin(schoolId);
        }
        
        match /incidents/{incidentId} {
            allow read: if isSchoolAdmin(schoolId) || isSchoolTeacher(schoolId);
            allow write: if isSchoolAdmin(schoolId) || isSchoolTeacher(schoolId);
        }
        
        match /medications/{medId} {
             allow read, write: if isSchoolAdmin(schoolId) || isSchoolTeacher(schoolId);
        }

        match /feeStructure/{feeId} {
            allow read, write: if isSchoolAdmin(schoolId);
        }

        match /discounts/{discountId} {
            allow read, write: if isSchoolAdmin(schoolId);
        }

        match /expenses/{expenseId} {
            allow read, write: if isSchoolAdmin(schoolId);
        }
        
        match /schoolProfile/{profileId} {
            allow read;
            allow write: if isSchoolAdmin(schoolId);
        }
        
        match /lesson-plans/{planId} {
            allow read, write: if isSchoolAdmin(schoolId) || isSchoolTeacher(schoolId);
        }

        match /library-resources/{resourceId} {
            allow read, write: if isSchoolAdmin(schoolId) || isSchoolTeacher(schoolId);
        }

        match /settings/{settingId} {
            allow read, write: if isSchoolAdmin(schoolId);
        }
        
        match /notifications/{notifId} {
            allow read, write: if isSchoolAdmin(schoolId) || isSchoolTeacher(schoolId) || isSchoolParent(schoolId);
        }
        
        match /teams/{teamId} {
            allow read, write: if isSchoolAdmin(schoolId) || isSchoolTeacher(schoolId);
            match /members/{memberId} {
                allow read, write: if isSchoolAdmin(schoolId) || isSchoolTeacher(schoolId);
            }
        }
    }
  }
}