
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isUserAuthenticated() {
      return request.auth != null;
    }

    function isUserSchoolMember(schoolId) {
      return isUserAuthenticated() && request.auth.token.schoolId == schoolId;
    }

    function isUserAdmin(schoolId) {
      return isUserSchoolMember(schoolId) && request.auth.token.role == 'Admin';
    }
    
    function isUserTeacher(schoolId) {
       return isUserSchoolMember(schoolId) && request.auth.token.role == 'Teacher';
    }

    function isUserParent(schoolId) {
       return isUserSchoolMember(schoolId) && request.auth.token.role == 'Parent';
    }

    // Schools: Allow authenticated users to read school profiles, but only admins to write.
    match /schools/{schoolId} {
      allow read: if isUserAuthenticated();
      allow write: if isUserAdmin(schoolId);

      // --- Nested Collections ---
      
      // Allow school members to read/write within their own school's collections.
      // Admins have full access within their school.
      
      // Students, Users, Classes, Roles
      match /(students|users|classes|roles|teams|feeStructure|discounts|incidents|medications|absences|subjects)/{document=**} {
        allow read, write: if isUserAdmin(schoolId);
      }
      
      // Teachers can only read certain collections
      match /(students|classes|subjects|incidents)/{document=**} {
        allow read: if isUserTeacher(schoolId);
      }
      
      // More granular rules for writes by non-admins
      match /incidents/{incidentId} {
        allow create: if isUserTeacher(schoolId);
        allow update: if isUserTeacher(schoolId) && request.resource.data.reportedBy == request.auth.uid;
      }
      
      match /announcements/{announcementId} {
        allow read: if isUserSchoolMember(schoolId);
        allow create: if isUserAdmin(schoolId) || isUserTeacher(schoolId);
      }
      
      match /calendar-events/{eventId} {
         allow read: if isUserSchoolMember(schoolId);
         allow create, update, delete: if isUserAdmin(schoolId);
      }

      // Parents can only read their own children's data and relevant school info
      match /students/{studentId} {
        allow read: if isUserParent(schoolId) && studentId in get(/databases/$(database)/documents/schools/$(schoolId)/users/$(request.auth.uid)).data.children;
        
        // Transaction subcollection for student fees
        match /transactions/{transactionId} {
           allow read: if isUserParent(schoolId) && studentId in get(/databases/$(database)/documents/schools/$(schoolId)/users/$(request.auth.uid)).data.children;
        }
      }
    }

    // Default deny all other access
    match /{path=**} {
      allow read, write: if false;
    }
  }
}
