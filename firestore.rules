
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isDeveloper() {
      return isSignedIn() && get(/databases/$(database)/documents/developers/$(request.auth.uid)).data.role == 'developer';
    }

    function isSchoolUser(schoolId) {
      return isSignedIn() && exists(/databases/$(database)/documents/schools/$(schoolId)/users/$(request.auth.uid));
    }
    
    function getUserRole(schoolId, userId) {
      return get(/databases/$(database)/documents/schools/$(schoolId)/users/$(userId)).data.role;
    }

    // Platform-level collections
    match /developers/{developerId} {
      // Allow creating the FIRST developer document if unauthenticated.
      allow create: if !exists(/databases/$(database)/documents/developers/$(developerId)) && size(get(/databases/$(database)/documents/developers).data) == 0;
      // Allow any developer to read developer records.
      allow read: if isDeveloper();
      // Only the developer themselves can update their own document.
      allow update: if request.auth.uid == developerId;
    }
    
    match /platformRoles/{role} {
      allow read: if isDeveloper();
      allow write: if isDeveloper();
    }
    
    match /platformSettings/{setting} {
        allow read, write: if isDeveloper();
    }
    
    match /platform_audit_logs/{logId} {
        allow read, write: if isDeveloper();
    }
    
    // Schools collection
    match /schools/{schoolId} {
      allow read, write: if isDeveloper();
      
      // School Profile (Branding, etc.) - allow public read for login page branding
      match /schoolProfile/{profileId} {
        allow read: true;
        allow write: if isDeveloper() || getUserRole(schoolId, request.auth.uid) == 'Admin';
      }

      // All other subcollections within a school
      match /{document=**} {
        allow read, write: if isDeveloper() || getUserRole(schoolId, request.auth.uid) == 'Admin';
        
        // Granular rules for specific roles
        match /students/{studentId} {
            // Parents can only read their own children's data
            allow read: if getUserRole(schoolId, request.auth.uid) == 'Parent' && request.auth.uid in get(/databases/$(database)/documents/schools/$(schoolId)/students/$(studentId)).data.parentIds;
            // Teachers can read students in their classes
            allow read: if getUserRole(schoolId, request.auth.uid) == 'Teacher' && get(/databases/$(database)/documents/schools/$(schoolId)/students/$(studentId)).data.classId in get(/databases/$(database)/documents/schools/$(schoolId)/users/$(request.auth.uid)).data.classIds;
        }
        
        match /users/{userId} {
            // Users can read their own profile
            allow read: if request.auth.uid == userId;
        }
      }
    }
    
    // Default deny
    match /{path=**} {
      allow read, write: if false;
    }
  }
}
