rules_version = '2';

function isAuthenticated() {
  return request.auth != null;
}

// --- Helper functions ---
function isDeveloper() {
  return isAuthenticated() && request.auth.token.role == 'developer';
}

function isAdmin(schoolId) {
  return isAuthenticated() &&
         request.auth.token.role == 'admin' &&
         request.auth.token.schoolId == schoolId;
}

function isTeacher(schoolId) {
  return isAuthenticated() &&
         request.auth.token.role == 'teacher' &&
         request.auth.token.schoolId == schoolId;
}

function isParent(schoolId) {
  return isAuthenticated() &&
         request.auth.token.role == 'parent' &&
         request.auth.token.schoolId == schoolId;
}

function isSchoolUser(schoolId) {
  return isAuthenticated() &&
         request.auth.token.schoolId == schoolId;
}

function isParentOf(studentId) {
  return isAuthenticated() &&
         studentId in get(/databases/$(database)/documents/users/$(request.auth.uid)).data.children;
}

function isFirstDeveloper() {
  // Checks if no developer docs exist yet
  return !exists(/databases/$(database)/documents/developers/__first__);
}

service cloud.firestore {
  match /databases/{database}/documents {

    // --- PLATFORM-WIDE COLLECTIONS ---
    match /developers/{devId} {
      allow create: if isAuthenticated() && isFirstDeveloper();
      allow create: if isDeveloper();
      allow read, update: if isDeveloper() && request.auth.uid == devId;
      allow list, delete: if isDeveloper();
    }

    match /platformRoles/{roleName} {
      allow read, write: if isDeveloper();
    }

    match /platformSettings/{docId} {
      allow read, write: if isDeveloper();
    }

    match /platform_audit_logs/{logId} {
      allow read, list, create: if isDeveloper();
    }

    // --- MAIN SCHOOLS COLLECTION ---
    match /schools/{schoolId} {
      allow get: if isAdmin(schoolId);
      allow list, create, update, delete: if isDeveloper();

      // --- USERS ---
      match /users/{userId} {
        allow read: if isSchoolUser(schoolId);
        allow create, update, delete: if isAdmin(schoolId) || isDeveloper();

        match /borrowed-items/{itemId} {
          allow read, write: if request.auth.uid == userId;
        }
        match /borrowing-history/{historyId} {
          allow read: if request.auth.uid == userId;
        }
      }

      // --- STUDENTS ---
      match /students/{studentId} {
        allow read: if isAdmin(schoolId) || isTeacher(schoolId) || (isParent(schoolId) && isParentOf(studentId));
        allow create, update, delete: if isAdmin(schoolId) || isDeveloper();

        match /transactions/{transactionId} {
          allow read: if isAdmin(schoolId) || (isParent(schoolId) && isParentOf(studentId));
          allow create, update: if isAdmin(schoolId);
        }

        match /grades/{gradeId} {
          allow read: if isAdmin(schoolId) || isTeacher(schoolId) || (isParent(schoolId) && isParentOf(studentId));
          allow create, update: if isAdmin(schoolId) || isTeacher(schoolId);
        }
      }

      // --- SEPARATE COLLECTION MATCHES (previously "where collection in [...]") ---
      match /classes/{docId} {
        allow read: if isSchoolUser(schoolId);
        allow write: if isAdmin(schoolId) || isDeveloper();
      }
      match /subjects/{docId} {
        allow read: if isSchoolUser(schoolId);
        allow write: if isAdmin(schoolId) || isDeveloper();
      }
      match /class-assignments/{docId} {
        allow read: if isSchoolUser(schoolId);
        allow write: if isAdmin(schoolId) || isDeveloper();
      }
      match /teams/{docId} {
        allow read: if isSchoolUser(schoolId);
        allow write: if isAdmin(schoolId) || isDeveloper();

        match /members/{memberId} {
          allow read: if isSchoolUser(schoolId);
          allow write: if isAdmin(schoolId) || isTeacher(schoolId);
        }
      }
      match /feeStructure/{docId} {
        allow read: if isSchoolUser(schoolId);
        allow write: if isAdmin(schoolId) || isDeveloper();
      }
      match /discounts/{docId} {
        allow read: if isSchoolUser(schoolId);
        allow write: if isAdmin(schoolId) || isDeveloper();
      }
      match /roles/{docId} {
        allow read: if isSchoolUser(schoolId);
        allow write: if isAdmin(schoolId) || isDeveloper();
      }
      match /settings/{docId} {
        allow read: if isSchoolUser(schoolId);
        allow write: if isAdmin(schoolId) || isDeveloper();
      }

      // --- OTHER COLLECTIONS ---
      match /assignments/{assignmentId} {
        allow read: if isSchoolUser(schoolId);
        allow create, update, delete: if isAdmin(schoolId) || isTeacher(schoolId);

        match /submissions/{submissionId} {
          allow read, create, update: if isAdmin(schoolId) || isTeacher(schoolId);
        }
      }

      match /attendance/{attendanceId} {
        allow read: if isAdmin(schoolId) || isTeacher(schoolId) || isParent(schoolId);
        allow write: if isAdmin(schoolId) || isTeacher(schoolId);
      }

      match /announcements/{announcementId} {
        allow read: if isSchoolUser(schoolId);
        allow create, update: if isAdmin(schoolId) || isTeacher(schoolId);
        allow update: if isParent(schoolId) &&
          request.resource.data.diff(resource.data).affectedKeys().hasOnly(['readBy','readCount']);
      }

      match /calendar-events/{calendarEventId} {
        allow read: if isSchoolUser(schoolId);
        allow write: if isAdmin(schoolId);
      }

      match /conversations/{conversationId} {
        allow get: if request.auth.uid in resource.data.participants;
        allow list, create, update: if isSchoolUser(schoolId);

        match /messages/{messageId} {
          allow read, create: if request.auth.uid in
            get(/databases/$(database)/documents/schools/$(schoolId)/conversations/$(conversationId)).data.participants;
        }
      }

      match /expenses/{expenseId} {
        allow read, write: if isAdmin(schoolId);
      }

      match /incidents/{docId} {
        allow read: if isAdmin(schoolId) || isTeacher(schoolId) || isParent(schoolId);
        allow write: if isAdmin(schoolId) || isTeacher(schoolId);
      }
      match /medications/{docId} {
        allow read: if isAdmin(schoolId) || isTeacher(schoolId) || isParent(schoolId);
        allow write: if isAdmin(schoolId) || isTeacher(schoolId);
      }
      match /absences/{docId} {
        allow read: if isAdmin(schoolId) || isTeacher(schoolId) || isParent(schoolId);
        allow write: if isAdmin(schoolId) || isTeacher(schoolId);
      }

      match /lesson-plans/{planId} {
        allow read: if isAdmin(schoolId) || isTeacher(schoolId);
        allow write: if isTeacher(schoolId);
      }

      match /library-resources/{resourceId} {
        allow read: if isSchoolUser(schoolId);
        allow write: if isAdmin(schoolId) || isTeacher(schoolId);
      }

      match /library-requests/{requestId} {
        allow read, create: if isTeacher(schoolId);
        allow write: if isAdmin(schoolId);
      }

      match /support-tickets/{ticketId} {
        allow read, create: if isSchoolUser(schoolId);
        allow write: if isAdmin(schoolId);
      }

      match /notifications/{notificationId} {
        allow read: if isSchoolUser(schoolId);
        allow create: if isSchoolUser(schoolId);
        allow update: if isSchoolUser(schoolId) &&
          request.resource.data.diff(resource.data).affectedKeys().hasOnly(['read']);
      }
    }

    match /schoolProfile/{schoolId} {
      allow read: if true;
      allow write: if isAdmin(schoolId) || isDeveloper();
    }
  }
}
